'''
파일명 : Ex04-5-bitwise.py

비트 연산자
    어떤 변수의 값을 0과 1의 조합인 2진수,
    즉 비트 로 변환한 뒤에 비트 단위로 연산 수행

    1. &(AND) : 입력이 모두 1이면 1, 아니면 0
    2. |(OR) : 입력 중 하나라도 1이면 1, 아니면 0
    3. ^(XOR) : 입력이 서로 다르면 1, 아니면 0 #익스클루시브 오아
    4. ~(NOT) : 입력이 0이면 1, 입력이 1이면 0
    5. <<(왼쪽 SHIFT) : 비트 단위로 왼쪽으로 N비트 이동하며
                        2의 N 거듭제곱만큼 곱셈
    6. >>(오른쪽 SHIFT) : 비트 단위로 오른쪽으로 N비트 이동하며
                        2의 N 거듭제곱만큼 나눗셈
'''
a = 6  # 0110
b = 5  # 0101
print('a & b : {}'.format(a & b))
  #0110  TF=F TT=T FT=F FF=F
  #0101
#&
  #0100=4
print('a | b : {}'.format(a | b))
  #0110  TF=T FT=T TT=T FF=F
  #0101
#|
  #0111=7
print('a ^ b : {}'.format(a ^ b))
  #0110  TT=F TF=T FT=T FF=F
  #0101
#^
  #0011=3
print('~a : {}'.format(~a))
  #0110
#~
  #보수 개념
  #a=6
# #b=5  0 양수 1 음수 0 0101 -1의 보수 -> 1 1010
# 6 + (-5) = 0 0110 + 1 1010
#   0110
#   1010
# 1 0001
#컴퓨터는 음수 표현 -> 2의 보수
'''
a = 6 --> 
0  0110  -> 1 1001
~ 
1  1001 (어떤 숫자의 보수라는 뜻) 
'''

print('a << 1 : {}'.format(a << 1))
  #0110 << 1 --> 1100(왼쪽으로 한 칸 씩 이동)
#<<
  #1100=12
print('a >> 1 {}'.format(a >> 1))
  #0110 >> 1 --> 0011(오른쪽으로 한 칸 씩 이동)
#>>
  #0011=3
